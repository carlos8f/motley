#!/usr/bin/env node
var cmd = require('commander')
  , motley = require('../')
  , assert = require('assert')
  , fs = require('fs')
  , path = require('path')
  , child_process = require('child_process')

cmd
  .usage('motley [path/to/project]')
  .version(require('../package.json').version)
  .option('-d, --cwd', 'motley project directory')
  .option('-i, --install', 'install dependencies automatically')
  .option('-p, --port <port>', 'specify listening port')
  .option('-t, --test', 'run tests')
  .option('--testFile <file>', 'run a single test')
  .description('run a motley project')

cmd.parse(process.argv);

if (typeof cmd.port !== 'undefined') process.env.MOTLEY_PORT = cmd.port;

var motleyFile = (cmd.args[0] || '').replace(/\/$/, '')
  , cwd = cmd.cwd

if (!motleyFile) motleyFile = '.';

var stat = fs.statSync(motleyFile);
if (stat.isDirectory()) {
  cwd = path.resolve(motleyFile);
  motleyFile = 'motley.yml';
}
else if (stat.isFile()) {
  cwd = path.resolve(path.dirname(motleyFile));
  motleyFile = path.basename(motleyFile);
}

if (cmd.testFile) cmd.test = true;
if (cmd.test && !process.env.MOTLEY_TEST) {
  process.env.MOTLEY_TEST = '1';
  // marshal the marshallers
  var motley_args = [path.resolve(cwd, motleyFile)];
  if (cmd.install) motley_args.unshift('-i');
  var proc_motley = child_process.spawn(path.resolve(__dirname, 'motley'), motley_args);
  process.on('exit', function () {
    proc_motley.kill();
  });
  var port;
  proc_motley.stdout.on('data', function (data) {
    var portMatch = data.toString().match(/server running at http:\/\/localhost:(.*)\/\n/i);
    assert(portMatch);
    port = portMatch[1];
    proc_motley.stdout.pipe(process.stdout);
    var mocha_path = path.resolve(__dirname, '../node_modules/.bin/mocha');
    var mocha_env = {};
    Object.keys(process.env).forEach(function (k) {
      mocha_env[k] = process.env[k];
    });
    mocha_env.MOTLEY_PORT = port;
    var mocha_args = [
      '--reporter', 'spec',
      '--timeout', '10s',
      '--bail',
      '--require', path.resolve(__dirname, '../test/common.js')
    ];
    if (cmd.testFile) mocha_args.push(cmd.testFile);
    var proc_mocha = child_process.spawn(mocha_path, mocha_args, {env: mocha_env});
    proc_mocha.stdout.pipe(process.stdout);
    proc_mocha.stderr.pipe(process.stderr);
    proc_mocha.on('exit', function (code) {
      proc_motley.kill();
      if (code !== 0) process.exit(code);
    });
    process.on('exit', function () {
      proc_mocha.kill();
    });
  });
  proc_motley.on('exit', function (code) {
    if (code !== 0 && typeof port === 'undefined') process.exit(code);
  });
  proc_motley.stderr.pipe(process.stderr);
  return;
}

if (cmd.install) {
  child_process.exec('npm install', {cwd: cwd}, function (err, stdout, stderr) {
    assert.ifError(err);
    motley(motleyFile, cwd);
  });
}
else motley(motleyFile, cwd);
